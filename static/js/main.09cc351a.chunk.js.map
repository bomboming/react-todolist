{"version":3,"sources":["atoms.ts","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","CreateToDo","setToDos","useSetRecoilState","_useForm","useForm","register","handleSubmit","setValue","_jsxs","onSubmit","_ref","toDo","prev","id","Date","now","text","category","concat","_toConsumableArray","children","_jsx","_objectSpread","required","placeholder","ToDo","ToDoList","toDos","useRecoilValue","map","GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","props","theme","bgColor","textColor","App","_Fragment","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","titleColor","liBgColor","themeBg","document","getElementById"],"mappings":"kMAQaA,EAAYC,YAAc,CACrCC,IAAK,OACLC,QAAS,K,sBCsBIC,MAxBf,WACE,IAAMC,EAAWC,YAAkBN,GACnCO,EAA6CC,cAArCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAQJ,EAARI,SAShC,OACEC,eAAA,QAAMC,SAAUH,GATE,SAAHI,GAAyB,IAAnBC,EAAID,EAAJC,KACrBV,GAAS,SAACW,GAAI,OACZ,CAAEC,GAAIC,KAAKC,MAAOC,KAAML,EAAMM,SAAU,UAASC,OAAAC,YAC9CP,GAAI,IAETL,EAAS,OAAQ,GACnB,IAG4Ca,SAAA,CACxCC,cAAA,QAAAC,wBAAA,GACMjB,EAAS,OAAQ,CACnBkB,SAAU,0BACV,IACFC,YAAY,wBAEdH,cAAA,UAAAD,SAAQ,UAGd,ECjBeK,MAXf,SAAaf,GAAmB,IAAhBM,EAAIN,EAAJM,KACd,OACER,eAAA,MAAAY,SAAA,CACEC,cAAA,QAAAD,SAAOJ,IACPK,cAAA,UAAAD,SAAQ,UACRC,cAAA,UAAAD,SAAQ,UACRC,cAAA,UAAAD,SAAQ,WAGd,ECWeM,I,EAAAA,EAjBf,WACE,IAAMC,EAAQC,YAAehC,GAE7B,OACEY,eAAA,OAAAY,SAAA,CACEC,cAAA,MAAAD,SAAI,YACJC,cAAA,SACAA,cAACrB,EAAU,IACXqB,cAAA,MAAAD,SACGO,EAAME,KAAI,SAAClB,GAAI,OACdU,cAACI,EAAIH,YAAA,GAAKX,GAAQ,QAK5B,ECRA,IAAMmB,EAAcC,YAAiBC,MAAAC,YAAA,q9CAuDhB,SAACC,GAAK,OAAKA,EAAMC,MAAMC,OAAO,IACzC,SAACF,GAAK,OAAKA,EAAMC,MAAME,SAAS,IAS3BC,EA1Ef,WACE,OACE9B,eAAA+B,WAAA,CAAAnB,SAAA,CACEC,cAACS,EAAW,IACZT,cAACK,EAAQ,MAGf,ECHAc,IAASC,OACPpB,cAACqB,IAAMC,WAAU,CAAAvB,SACfC,cAACuB,IAAU,CAAAxB,SACTC,cAACwB,IAAa,CAACV,MCRkB,CACrCE,UAAW,QACXD,QAAS,UACTU,YAAa,UACbC,WAAY,UACZC,UAAW,UACXC,QAAS,SDE2B7B,SAC9BC,cAACiB,EAAG,UAIVY,SAASC,eAAe,Q","file":"static/js/main.09cc351a.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport interface IToDo {\n  id: number;\n  text: string;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n","import { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport { toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((prev) => [\n      { id: Date.now(), text: toDo, category: \"TO_DO\" },\n      ...prev,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do list\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import { IToDo } from \"../atoms\";\n\nfunction ToDo({ text }: IToDo) {\n  return (\n    <li>\n      <span>{text}</span>\n      <button>To Do</button>\n      <button>Doing</button>\n      <button>Done</button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import { useRecoilValue } from \"recoil\";\nimport { toDoState } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoState);\n\n  return (\n    <div>\n      <h1>To Dos!</h1>\n      <hr />\n      <CreateToDo />\n      <ul>\n        {toDos.map((toDo) => (\n          <ToDo {...toDo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"white\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n"],"sourceRoot":""}