{"version":3,"sources":["components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","ToDoList","_useRecoilState","useRecoilState","_useRecoilState2","_slicedToArray","_useForm","useForm","register","handleSubmit","setValue","_jsxs","children","_jsx","onSubmit","data","_objectSpread","required","placeholder","GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","props","theme","bgColor","textColor","App","_Fragment","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","titleColor","liBgColor","themeBg","document","getElementById"],"mappings":"wNAYMA,EAAYC,YAAK,CACrBC,IAAK,OACLC,QAAS,KA4BIC,I,EAAAA,EAzBf,WACE,IAAAC,EAA0BC,YAAeN,GAAUO,EAAAC,YAAAH,EAAA,GACnDI,GADYF,EAAA,GAAUA,EAAA,GACuBG,eAArCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAQJ,EAARI,SAKhC,OACEC,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,YACJC,cAAA,SACAF,eAAA,QAAMG,SAAUL,GARA,SAACM,GACnBL,EAAS,OAAQ,GACnB,IAM8CE,SAAA,CACxCC,cAAA,QAAAG,wBAAA,GACMR,EAAS,OAAQ,CACnBS,SAAU,0BACV,IACFC,YAAY,wBAEdL,cAAA,UAAAD,SAAQ,WAEVC,cAAA,WAGN,EC5BA,IAAMM,EAAcC,YAAiBC,MAAAC,YAAA,q9CAuDhB,SAACC,GAAK,OAAKA,EAAMC,MAAMC,OAAO,IACzC,SAACF,GAAK,OAAKA,EAAMC,MAAME,SAAS,IAS3BC,EA1Ef,WACE,OACEhB,eAAAiB,WAAA,CAAAhB,SAAA,CACEC,cAACM,EAAW,IACZN,cAACZ,EAAQ,MAGf,ECHA4B,IAASC,OACPjB,cAACkB,IAAMC,WAAU,CAAApB,SACfC,cAACoB,IAAU,CAAArB,SACTC,cAACqB,IAAa,CAACV,MCRkB,CACrCE,UAAW,QACXD,QAAS,UACTU,YAAa,UACbC,WAAY,UACZC,UAAW,UACXC,QAAS,SDE2B1B,SAC9BC,cAACc,EAAG,UAIVY,SAASC,eAAe,Q","file":"static/js/main.1f4ca1f5.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport {\n  atom,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\n\ninterface IForm {\n  toDo: string;\n}\n\nconst toDoState = atom({\n  key: \"toDo\",\n  default: [],\n});\n\nfunction ToDoList() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = (data: IForm) => {\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <div>\n      <h1>To Dos!</h1>\n      <hr />\n      <form onSubmit={handleSubmit(handleValid)}>\n        <input\n          {...register(\"toDo\", {\n            required: \"Please write a To Do\",\n          })}\n          placeholder=\"Write a to do list\"\n        />\n        <button>Add</button>\n      </form>\n      <ul></ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"white\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n"],"sourceRoot":""}