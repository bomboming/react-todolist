{"version":3,"sources":["atoms.ts","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","toDoState","atom","key","default","categoryState","TO_DO","toDoSelector","selector","get","_ref","toDos","category","filter","toDo","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","_useForm","useForm","register","handleSubmit","setValue","_jsxs","onSubmit","prev","id","Date","now","text","concat","_toConsumableArray","children","_jsx","_objectSpread","required","placeholder","ToDo","onClick","event","name","currentTarget","oldToDos","targetIndex","findIndex","newToDo","slice","DOING","DONE","Construtor","styled","div","_templateObject","_taggedTemplateLiteral","ToDoList","_useRecoilState","useRecoilState","_useRecoilState2","_slicedToArray","setCategory","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","_Fragment","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","titleColor","liBgColor","themeBg","document","getElementById"],"mappings":"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","file":"static/js/main.22becc00.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\n// type categories = \"TO_DO\" | \"DOING\" | \"DONE\";\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  id: number;\n  text: string;\n  category: Categories;\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((prev) => [{ id: Date.now(), text: toDo, category }, ...prev]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do list\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import { useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState, Categories } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, toDoSelector, Categories } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\nimport styled from \"styled-components\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n\n  return (\n    <Construtor>\n      <h1>To Dos!</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n      </select>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </Construtor>\n  );\n}\n\nconst Construtor = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 50px;\n`;\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"white\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n"],"sourceRoot":""}