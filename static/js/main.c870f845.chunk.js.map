{"version":3,"sources":["ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["ToDoList","_useState","useState","_useState2","_slicedToArray","toDo","setToDo","_jsx","children","_jsxs","onSubmit","event","preventDefault","console","log","onChange","value","currentTarget","placeholder","GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","props","theme","bgColor","textColor","App","_Fragment","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","titleColor","liBgColor","themeBg","document","getElementById"],"mappings":"iMA6BeA,I,EAAAA,EA3Bf,WACE,IAAAC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAYpB,OACEI,cAAA,OAAAC,SACEC,eAAA,QAAMC,SAPO,SAACC,GAChBA,EAAMC,iBACNC,QAAQC,IAAIT,EACd,EAI6BG,SAAA,CACvBD,cAAA,SACEQ,SAfS,SAACJ,GAChB,IACmBK,EACfL,EADFM,cAAiBD,MAEnBV,EAAQU,EACV,EAWQA,MAAOX,EACPa,YAAY,uBAEdX,cAAA,UAAAC,SAAQ,YAIhB,ECfA,IAAMW,EAAcC,YAAiBC,MAAAC,YAAA,q9CAuDhB,SAACC,GAAK,OAAKA,EAAMC,MAAMC,OAAO,IACzC,SAACF,GAAK,OAAKA,EAAMC,MAAME,SAAS,IAS3BC,EA1Ef,WACE,OACElB,eAAAmB,WAAA,CAAApB,SAAA,CACED,cAACY,EAAW,IACZZ,cAACP,EAAQ,MAGf,E,QCHA6B,IAASC,OACPvB,cAACwB,IAAMC,WAAU,CAAAxB,SACfD,cAAC0B,IAAU,CAAAzB,SACTD,cAAC2B,IAAa,CAACV,MCRkB,CACrCE,UAAW,QACXD,QAAS,UACTU,YAAa,UACbC,WAAY,UACZC,UAAW,UACXC,QAAS,SDE2B9B,SAC9BD,cAACoB,EAAG,UAIVY,SAASC,eAAe,Q","file":"static/js/main.c870f845.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction ToDoList() {\n  const [toDo, setToDo] = useState(\"\");\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setToDo(value);\n  };\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log(toDo);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={toDo}\n          placeholder=\"write a to do list\"\n        />\n        <button>add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"white\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n"],"sourceRoot":""}