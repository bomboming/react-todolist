{"version":3,"sources":["atoms.ts","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","toDoSelector","selector","get","_ref","toDos","filter","toDo","category","CreateToDo","setToDos","useSetRecoilState","_useForm","useForm","register","handleSubmit","setValue","_jsxs","onSubmit","prev","id","Date","now","text","concat","_toConsumableArray","children","_jsx","_objectSpread","required","placeholder","ToDo","onClick","event","name","currentTarget","oldToDos","targetIndex","findIndex","newToDo","slice","Construtor","styled","div","_templateObject","_taggedTemplateLiteral","ToDoList","_useRecoilValue","useRecoilValue","_useRecoilValue2","_slicedToArray","doing","done","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","_Fragment","ReactDOM","render","React","StrictMode","RecoilRoot","ThemeProvider","accentColor","titleColor","liBgColor","themeBg","document","getElementById"],"mappings":"yMAQaA,EAAYC,YAAc,CACrCC,IAAK,OACLC,QAAS,KAGEC,EAAeC,YAAS,CACnCH,IAAK,eACLI,IAAK,SAAAC,GAAc,IACXC,GAAQF,EADLC,EAAHD,KACYN,GAClB,MAAO,CACLQ,EAAMC,QAAO,SAACC,GAAI,MAAuB,UAAlBA,EAAKC,QAAoB,IAChDH,EAAMC,QAAO,SAACC,GAAI,MAAuB,UAAlBA,EAAKC,QAAoB,IAChDH,EAAMC,QAAO,SAACC,GAAI,MAAuB,SAAlBA,EAAKC,QAAmB,IAEnD,I,sBCUaC,MAxBf,WACE,IAAMC,EAAWC,YAAkBd,GACnCe,EAA6CC,cAArCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAQJ,EAARI,SAShC,OACEC,eAAA,QAAMC,SAAUH,GATE,SAAHX,GAAyB,IAAnBG,EAAIH,EAAJG,KACrBG,GAAS,SAACS,GAAI,OACZ,CAAEC,GAAIC,KAAKC,MAAOC,KAAMhB,EAAMC,SAAU,UAASgB,OAAAC,YAC9CN,GAAI,IAETH,EAAS,OAAQ,GACnB,IAG4CU,SAAA,CACxCC,cAAA,QAAAC,wBAAA,GACMd,EAAS,OAAQ,CACnBe,SAAU,0BACV,IACFC,YAAY,wBAEdH,cAAA,UAAAD,SAAQ,UAGd,ECWeK,I,EAAAA,EAtCf,SAAa3B,GAAiC,IAA9BmB,EAAInB,EAAJmB,KAAMf,EAAQJ,EAARI,SAAUY,EAAEhB,EAAFgB,GACxBV,EAAWC,YAAkBd,GAC7BmC,EAAU,SAACC,GACf,IACmBC,EACfD,EADFE,cAAiBD,KAEnBxB,GAAS,SAAC0B,GACR,IAAMC,EAAcD,EAASE,WAAU,SAAC/B,GAAI,OAAKA,EAAKa,KAAOA,CAAE,IACzDmB,EAAU,CAAEhB,OAAMH,KAAIZ,SAAU0B,GACtC,MAAM,GAANV,OAAAC,YACKW,EAASI,MAAM,EAAGH,IAAY,CACjCE,GAAOd,YACJW,EAASI,MAAMH,EAAc,IAEpC,GACF,EACA,OACEpB,eAAA,MAAAS,SAAA,CACEC,cAAA,QAAAD,SAAOH,IACO,UAAbf,GACCmB,cAAA,UAAQO,KAAK,QAAQF,QAASA,EAAQN,SAAC,UAI3B,UAAblB,GACCmB,cAAA,UAAQO,KAAK,QAAQF,QAASA,EAAQN,SAAC,UAI3B,SAAblB,GACCmB,cAAA,UAAQO,KAAK,OAAOF,QAASA,EAAQN,SAAC,WAM9C,ECAA,I,EAAMe,EAAaC,IAAOC,IAAGC,MAAAC,YAAA,6HAQdC,EAzCf,WACE,IAAAC,EAA4BC,YAAe/C,GAAagD,EAAAC,YAAAH,EAAA,GAAjDxC,EAAI0C,EAAA,GAAEE,EAAKF,EAAA,GAAEG,EAAIH,EAAA,GAExB,OACEhC,eAACwB,EAAU,CAAAf,SAAA,CACTC,cAAA,MAAAD,SAAI,YACJC,cAAA,SACAA,cAAClB,EAAU,IACXkB,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SACGnB,EAAK8C,KAAI,SAAC9C,GAAI,OACboB,cAACI,EAAIH,YAAA,GAAmBrB,GAAbA,EAAKa,GAAgB,MAGpCO,cAAA,SACAA,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SACGyB,EAAME,KAAI,SAAC9C,GAAI,OACdoB,cAACI,EAAIH,YAAA,GAAmBrB,GAAbA,EAAKa,GAAgB,MAGpCO,cAAA,SACAA,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAAD,SACG0B,EAAKC,KAAI,SAAC9C,GAAI,OACboB,cAACI,EAAIH,YAAA,GAAmBrB,GAAbA,EAAKa,GAAgB,MAGpCO,cAAA,WAGN,ECzBA,IAAM2B,EAAcC,YAAiBX,MAAAC,YAAA,q9CAuDhB,SAACW,GAAK,OAAKA,EAAMC,MAAMC,OAAO,IACzC,SAACF,GAAK,OAAKA,EAAMC,MAAME,SAAS,IAS3BC,EA1Ef,WACE,OACE3C,eAAA4C,WAAA,CAAAnC,SAAA,CACEC,cAAC2B,EAAW,IACZ3B,cAACmB,EAAQ,MAGf,ECHAgB,IAASC,OACPpC,cAACqC,IAAMC,WAAU,CAAAvC,SACfC,cAACuC,IAAU,CAAAxC,SACTC,cAACwC,IAAa,CAACV,MCRkB,CACrCE,UAAW,QACXD,QAAS,UACTU,YAAa,UACbC,WAAY,UACZC,UAAW,UACXC,QAAS,SDE2B7C,SAC9BC,cAACiC,EAAG,UAIVY,SAASC,eAAe,Q","file":"static/js/main.f2dc3224.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport interface IToDo {\n  id: number;\n  text: string;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    return [\n      toDos.filter((toDo) => toDo.category === \"TO_DO\"),\n      toDos.filter((toDo) => toDo.category === \"DOING\"),\n      toDos.filter((toDo) => toDo.category === \"DONE\"),\n    ];\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport { toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((prev) => [\n      { id: Date.now(), text: toDo, category: \"TO_DO\" },\n      ...prev,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do list\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import { useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== \"DOING\" && (\n        <button name=\"DOING\" onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== \"TO_DO\" && (\n        <button name=\"TO_DO\" onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== \"DONE\" && (\n        <button name=\"DONE\" onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import { useRecoilValue } from \"recoil\";\nimport { toDoSelector } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\nimport styled from \"styled-components\";\n\nfunction ToDoList() {\n  const [toDo, doing, done] = useRecoilValue(toDoSelector);\n\n  return (\n    <Construtor>\n      <h1>To Dos!</h1>\n      <hr />\n      <CreateToDo />\n      <h2>To Do</h2>\n      <ul>\n        {toDo.map((toDo) => (\n          <ToDo key={toDo.id} {...toDo} />\n        ))}\n      </ul>\n      <hr />\n      <h2>Doing</h2>\n      <ul>\n        {doing.map((toDo) => (\n          <ToDo key={toDo.id} {...toDo} />\n        ))}\n      </ul>\n      <hr />\n      <h2>Done</h2>\n      <ul>\n        {done.map((toDo) => (\n          <ToDo key={toDo.id} {...toDo} />\n        ))}\n      </ul>\n      <hr />\n    </Construtor>\n  );\n}\n\nconst Construtor = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 50px;\n`;\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"white\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n"],"sourceRoot":""}